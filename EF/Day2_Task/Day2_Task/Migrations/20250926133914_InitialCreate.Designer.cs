// <auto-generated />
using System;
using Day2_Task.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day2_Task.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250926133914_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Day2_Task.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Duration = new TimeSpan(0, 2, 28, 0, 0),
                            Genre = "Sci-Fi",
                            Title = "Inception"
                        },
                        new
                        {
                            MovieId = 2,
                            Duration = new TimeSpan(0, 2, 32, 0, 0),
                            Genre = "Action",
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            MovieId = 3,
                            Duration = new TimeSpan(0, 2, 49, 0, 0),
                            Genre = "Sci-Fi",
                            Title = "Interstellar"
                        },
                        new
                        {
                            MovieId = 4,
                            Duration = new TimeSpan(0, 2, 34, 0, 0),
                            Genre = "Crime",
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            MovieId = 5,
                            Duration = new TimeSpan(0, 2, 22, 0, 0),
                            Genre = "Drama",
                            Title = "The Shawshank Redemption"
                        });
                });

            modelBuilder.Entity("Day2_Task.Models.Screening", b =>
                {
                    b.Property<int>("ScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreeningId"));

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScreeningTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ScreeningId");

                    b.HasIndex("MovieId");

                    b.ToTable("Screenings");

                    b.HasData(
                        new
                        {
                            ScreeningId = 1,
                            AvailableSeats = 100,
                            MovieId = 1,
                            ScreeningTime = new DateTime(2025, 9, 26, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScreeningId = 2,
                            AvailableSeats = 100,
                            MovieId = 2,
                            ScreeningTime = new DateTime(2025, 9, 26, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScreeningId = 3,
                            AvailableSeats = 100,
                            MovieId = 3,
                            ScreeningTime = new DateTime(2025, 9, 26, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScreeningId = 4,
                            AvailableSeats = 100,
                            MovieId = 4,
                            ScreeningTime = new DateTime(2025, 9, 26, 21, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ScreeningId = 5,
                            AvailableSeats = 100,
                            MovieId = 5,
                            ScreeningTime = new DateTime(2025, 9, 26, 22, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Day2_Task.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("ScreeningId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            CustomerName = "John Doe",
                            Price = 10.00m,
                            ScreeningId = 1,
                            SeatNumber = 1
                        },
                        new
                        {
                            TicketId = 2,
                            CustomerName = "Jane Smith",
                            Price = 12.00m,
                            ScreeningId = 2,
                            SeatNumber = 2
                        },
                        new
                        {
                            TicketId = 3,
                            CustomerName = "Alice Johnson",
                            Price = 15.00m,
                            ScreeningId = 3,
                            SeatNumber = 3
                        },
                        new
                        {
                            TicketId = 4,
                            CustomerName = "Bob Brown",
                            Price = 11.00m,
                            ScreeningId = 4,
                            SeatNumber = 4
                        },
                        new
                        {
                            TicketId = 5,
                            CustomerName = "Charlie Davis",
                            Price = 13.00m,
                            ScreeningId = 5,
                            SeatNumber = 5
                        });
                });

            modelBuilder.Entity("Day2_Task.Models.Screening", b =>
                {
                    b.HasOne("Day2_Task.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Day2_Task.Models.Ticket", b =>
                {
                    b.HasOne("Day2_Task.Models.Screening", "Screening")
                        .WithMany()
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Screening");
                });
#pragma warning restore 612, 618
        }
    }
}
